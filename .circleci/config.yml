version: 2.1

commands:
  install_deps:
    description: "Install Dependencies"
    steps:
      - run:
          name: Install Dependencies
          command: |
            apk add --no-cache \
              py-pip \
              curl \
              curl-dev
  build_image:
    description: "Builds a Docker Image"
    steps:
      - run:
          name: Build Image
          command: |
            set +o pipefail
            sh buildscripts/buildSupportedAlpineImages.sh
  test_image:
    description: "Test Image"
    steps:
      - run:
          name: Test Image
          command: |
              sh buildscripts/testSupportedAlpineImages.sh
  push_image:
    description: "Push Image to DockerHub"
    steps:
      - run:
          name: Push Dockerhub Image
          command: |
              docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
              sh buildscripts/releaseSupportedAlpineImages.sh

jobs:
  build_branch:
    working_directory: /app
    docker:
      - image: docker:19.03.8-git
    steps:
      - checkout
      - setup_remote_docker
      - install_deps
      - build_image
      - test_image

  build_master:
    working_directory: /app
    docker:
      - image: docker:19.03.8-git
    steps:
      - checkout
      - setup_remote_docker
      - install_deps
      - build_image
      - test_image
      - push_image

  build_nightly:
    working_directory: /app
    environment:
      IMAGE_VERSION: nightly
    docker:
      - image: docker:19.03.8-git
    steps:
      - checkout
      - setup_remote_docker
      - install_deps
      - build_image
      - test_image
      - push_image

  build_tags:
    working_directory: /app
    docker:
      - image: docker:19.03.8-git
    steps:
      - checkout
      - setup_remote_docker
      - install_deps
      - build_image
      - test_image
      - push_image

workflows:
  version: 2
  build_pipeline:
    jobs:
      - build_tags:
          filters:
            tags:
              only: /^\d+(\.\d+)+$/
            branches:
              ignore: /.*/
      - build_master:
          filters:
            branches:
              only: master
      - build_branch:
          filters:
            branches:
              ignore:
                - master
  nightly:
    triggers:
      - schedule:
          cron: "0 1 * * 1"
          filters:
            branches:
              only:
                - master
    jobs:
      - build_nightly
